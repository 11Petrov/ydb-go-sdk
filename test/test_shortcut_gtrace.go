// Code generated by gtrace. DO NOT EDIT.

package test

// Compose returns a new ShortcutPerFieldTrace which has functional fields composed
// both from t and x.
func (t ShortcutPerFieldTrace) Compose(x ShortcutPerFieldTrace) (ret ShortcutPerFieldTrace) {
	switch {
	case t.OnFoo == nil:
		ret.OnFoo = x.OnFoo
	case x.OnFoo == nil:
		ret.OnFoo = t.OnFoo
	default:
		h1 := t.OnFoo
		h2 := x.OnFoo
		ret.OnFoo = func() {
			h1()
			h2()
		}
	}
	switch {
	case t.OnBar == nil:
		ret.OnBar = x.OnBar
	case x.OnBar == nil:
		ret.OnBar = t.OnBar
	default:
		h1 := t.OnBar
		h2 := x.OnBar
		ret.OnBar = func() {
			h1()
			h2()
		}
	}
	return ret
}
func (t ShortcutPerFieldTrace) onFoo() {
	fn := t.OnFoo
	if fn == nil {
		return
	}
	fn()
}
func (t ShortcutPerFieldTrace) onBar() {
	fn := t.OnBar
	if fn == nil {
		return
	}
	fn()
}
func shortcutPerFieldTraceOnFoo(t ShortcutPerFieldTrace) {
	t.onFoo()
}
