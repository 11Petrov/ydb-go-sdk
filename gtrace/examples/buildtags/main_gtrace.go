// Code generated by gtrace. DO NOT EDIT.

// +build gtrace

package main

// Compose returns a new Trace which has functional fields composed
// both from t and x.
func (t Trace) Compose(x Trace) (ret Trace) {
	switch {
	case t.OnInput == nil:
		ret.OnInput = x.OnInput
	case x.OnInput == nil:
		ret.OnInput = t.OnInput
	default:
		h1 := t.OnInput
		h2 := x.OnInput
		ret.OnInput = func(s string) func() {
			r1 := h1(s)
			r2 := h2(s)
			switch {
			case r1 == nil:
				return r2
			case r2 == nil:
				return r1
			default:
				return func() {
					r1()
					r2()
				}
			}
		}
	}
	return ret
}
func (t Trace) onInput(s string) func() {
	fn := t.OnInput
	if fn == nil {
		return func() {
			return
		}
	}
	res := fn(s)
	if res == nil {
		return func() {
			return
		}
	}
	return res
}
func traceOnInput(t Trace, s string) func() {
	res := t.onInput(s)
	return func() {
		res()
	}
}
