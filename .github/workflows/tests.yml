name: tests
on:
  push:
    tags:
      - v*
    branches:
      - master
      - '**'
  pull_request:
  workflow_dispatch:
jobs:
  unit:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x, 1.15.x, 1.16.x, 1.17.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: go test -race -tags fast -coverprofile unit.txt -covermode atomic ./...
      - name: Clear report (unix)
        if: runner.os != 'Windows'
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sed -i '/testutil\|trace\|test/d' unit.txt
          elif [ "$RUNNER_OS" == "macOS" ]; then
            sed -i '' '/testutil\|trace\|test/d' unit.txt
          fi
        shell: bash
      - name: Clear report (windows)
        if: runner.os == 'Windows'
        run: |
          (Get-Content unit.txt) -replace '^(testutil\|trace\|test).*$', '' | Out-File -encoding UTF8 unit.txt
        shell: pwsh
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./unit.txt
          flags: unit,${{ matrix.os }},${{ matrix.go-version }}
          name: unit
  table:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2135:2135
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
      YDB_CONNECTION_STRING: grpcs://localhost:2135/?database=/local
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
      YDB_ANONYMOUS_CREDENTIALS: 1
      YDB_SHUTDOWN_URLS: http://localhost:8765/actors/kqp_proxy?force_shutdown=all
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: go test -race -coverpkg=./... -coverprofile table.txt -covermode atomic ./test/table_test.go
      - name: Clear report
        run: sed -i '/testutil\|trace\|test/d' table.txt
        shell: bash
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./table.txt
          flags: table,e2e,integration,${{ matrix.os }},${{ matrix.go-version }}
          name: table
  ratelimiter:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2135:2135
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
      YDB_CONNECTION_STRING: grpcs://localhost:2135/?database=/local
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
      YDB_ANONYMOUS_CREDENTIALS: 1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: go test -race -coverpkg=./... -coverprofile ratelimiter.txt -covermode atomic ./test/ratelimiter_test.go
      - name: Clear report
        run: sed -i '/testutil\|trace\|test/d' ratelimiter.txt
        shell: bash
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./ratelimiter.txt
          flags: ratelimiter,e2e,integration,${{ matrix.os }},${{ matrix.go-version }}
          name: ratelimiter
  scripting:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2135:2135
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
      YDB_CONNECTION_STRING: grpcs://localhost:2135/?database=/local
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
      YDB_ANONYMOUS_CREDENTIALS: 1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: go test -race -coverpkg=./... -coverprofile scripting.txt -covermode atomic ./test/scripting_test.go
      - name: Clear report
        run: sed -i '/testutil\|trace\|test/d' scripting.txt
        shell: bash
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./scripting.txt
          flags: scripting,e2e,integration,${{ matrix.os }},${{ matrix.go-version }}
          name: scripting